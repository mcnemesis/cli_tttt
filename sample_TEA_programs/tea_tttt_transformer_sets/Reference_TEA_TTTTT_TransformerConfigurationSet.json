[
    "ZHA Zee Hacker Assistant v1.0.2<>#!/usr/bin/tttt -fc\n#----------------------------------------------|\n# ZHA: Zee Hacker Assistant (v.1.0.2) | MAR,'25\n#----------------------------------------------|\n# based off of TEAPAT: TEA Personal AssistanT:\n# ref: https://doi.org/10.20944/preprints202502.1849.v1\n#----------------------------------------------|\n# This little program is a mini\n# quasi-general artificial intelligence (qAGI)\n# a special personal assistant perhaps\n# best left for hackers, created \n# using the TEA programming language: https://bit.ly/projtea\n###############################################|\n\n#show welcome message\nv:vORIN\nv:vWELCOME:{■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■-■■■■■ *:{~} ZHA v1.0.2 ■■■■■■■-■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■-welcome to the future of chat_-■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■--}\nv:vREG:-|h*!:vWELCOME:vREG\nd:-|i:\n\ny:vORIN # continue...\n\n# set entity name\nv:vPANAME:{ZHA}\nf:^$:lSET:lNOSET\nl:lSET\ni:{Who do u wish to talk to? }|i: # user's entity name\ng:|f!:^$:lSETI:lRULES|l:lSETI|v:vPANAME|j:lRULES \nl:lNOSET | y*: | v:vPANAME # evoke invoker's entity\nl:lRULES # show instructions\ni!:{At any time, reply with 'end' to quit\n}|i:\nv:vPROMPT:{: Talk to Me: }\ng*:{ }:vPANAME:vPROMPT | v:vPAPROMPT\nl:lPROMPT # prompt, get answer, process\n\n# generate question\nn:10000000|s:|v:qN|\n# decide between ANE and NE\nn:|f!:[2357]:qANE:qNE\nl:qANE|\n# decide between AE and ANE\nn:1|f:0:qAE\n# generate ANE\np!:27\n|s:_:13:5 |d:_.*$\n|s: |v:qR\n|g*:{}:qR:qN\n|j:qF|\nl:qAE # pure AE\np!:27\n|s:_:13:5 |d:_.*$ |s:\n|j:qF|\nl:qNE # pure NE\n|y:qN\n|l:qF # process and package question \n|a:\n|x:{: }\nv:vQ\n\n# decide on whether question or not\nn:|f:[2357]:lNoQ\ny:vQ\n|x!:{?: }\nj:lProQ\n\nl:lNoQ\ny:vQ\n|x!:{ : }\n\nl:lProQ\n# stash generated question\nv:vGenQuestion\n\n# decide between default or generated prompt\nn:|f:[2468]:lGenPROMPT:lDefPROMPT\n\nl:lGenPROMPT\ng*:{ }:vPANAME:vGenQuestion | v:vGenPROMPT\ny:vGenPROMPT|j:lDisplayPROMPT\n\nl:lDefPROMPT\ny:vPAPROMPT\n\nl:lDisplayPROMPT\n| i: |z:| q:^end$\n# generate answer\nn:10000000|s:|v:N|\n# decide between ANE and NE\nn:|f!:[2357]:ANE:NE\nl:ANE|\n# decide between AE and ANE\nn:1|f:0:AE\n# generate ANE\np!:27\n|s:_:13:5 |d:_.*$ |s: |v:R\n|g*:{}:R:N\n|j:F|\nl:AE # pure AE\np!:27\n|s:_:13:5 |d:_.*$ |s:\n|j:F|\nl:NE # pure NE\n|y:N\n|l:F # process and package answer \n|a:|v:vA\n\n# decide on whether question or not\nn:|f!:[2357]:lQA\ny:vA\n|x!:{? }\nj:lNoQA\n\nl:lQA\ny:vA\n|x!:{ | }\n\nl:lNoQA\n# display answer\n|i: \n| j:lPROMPT # and loop\n",
    "RANDOM Jokes<>i!:https://official-joke-api.appspot.com/jokes/random|w:|h!:,|k:{setup|punchline}|h!:{:}|k!:{setup|punchline}|d.::.|r!:.\\n:_|d:.$|h!:_|d:_",
"Compute Modal Sequence Statistic[words]<>i:{CAT DOG CAT FISH CAT COW COW FISH COW DUCK}|u: #uses sample list of words if no explicit input was provided.",
"Compute Modal Sequence Statistic[characters]<>i:{In the beginning God created the heavens and the earth.}|u!: #uses first sentence in the English Bible if no explicit input was provided.",
"The SIR Game<># randomly pick a word from the given list\nI!:{HONEY TRICK WINDS GAMES} | a: | d:[ ].*$\n# (=”TRICK”) for example\nS:-:4 | # randomly inject “-“ b4 4th pstn\n#(=”TR-ICK”) for example\nR:.[-]:? | R:[-].:? | v:vW | v:vPR:What is the missing letter in | g*:{ }:vPR:vW | i: | # e.g returns “TR?CK”",
   "De PUNCTURA Filter<>d!:{[\\\\ \\[\\]!\"#$%&'()*+,-./:;<=>?@^_`{|}~]} \n#try to run this interesting TEA program against large normal text such as the TEA WEB DOCs to appreciate it.",
   "Random IP Address Generator<>n!:256:0:4:.",
   "Random IP Address Generator-II<>v:vL:256|v:vLL:0|v:vS:4|v:vG:.|n*:vL:vLL:vS:vG",
   "Alpha-N decode keys Generator<>i!:{0123456789abcdefghijklmnopqrstuvwxyz}|b!:|a!:|d!:[a-z][0-9]|h: #alpha-N decode keys Generator",
   "The Number SEEKER Program-II<>d!:[0-9]",
   "Then some docs...<>Please note that we are still porting CLI to WEB, and also, the original reference/standard TEA programs were meant for the MOBILE TEA, which is currently obsolete or far behind both CLI and WEB TEA. So, keep checking, and the updated, relevant STANDARD TEA Programs list shall become richer, more relevant.",
   "TTTT INSTALL DOC Null-Program<># To install TTTT on any Ubuntu:\n\ncurl -Ls https:\/\/bit.ly\/installtea | bash\n\n# To read TEA and TTTT documentation after installation:\n\nman tttt",
   "Pure TTTT INSTALL DOC Null-Program<># Tis sorted for most[all] systems now...\n\n\n# To install TTTT on any Linux (with support for debian *.deb packages):\n\ncurl -Ls https:\/\/bit.ly\/installtea | bash\n\n# To read TEA and TTTT documentation after installation:\n\nman tttt\n\n# Invoke\/Import in TEAS\/Scripts with\n\n# #!\/usr\/bin\/env tttt",
   "NIX Sample TEA Script <>#!\/usr\/bin\/tttt -fc\n# This sample TEAS shows how to use TEA in UNIX\/Linux Scripts just like\n# one might have used AWK, Sed, BASH or even Perl, Python, etc..\n# Note that because of of some constraints in the CLI TTTT implementation,\n# One must invoke TTTT in a script using a modified\/special shebang such as\n# we demonstrate in this example program.\n# ----------------------------------------------------------------\n# IMPLEMENTOR: Joseph W. Lutalo <jwl@nuchwezi.com>\n# ----------------------------------------------------------------\n# Greetings to all TEAists out there ---<(*~)\ni:TransformedcoldtoCOLD\nr:d:d_\nr:C:_C\nr:_:| \nr:C:G\nt:"
]
